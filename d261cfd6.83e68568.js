(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{103:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),l=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=l.a.createContext({}),p=function(e){var t=l.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},m=l.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,d=u["".concat(a,".").concat(m)]||u[m]||b[m]||o;return n?l.a.createElement(d,i(i({ref:t},c),{},{components:n})):l.a.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var c=2;c<o;c++)a[c]=n[c];return l.a.createElement.apply(null,a)}return l.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(2),l=n(6),o=(n(0),n(103)),a={id:"exp-level",title:"ExpLevel"},i={unversionedId:"tools/exp-level",id:"tools/exp-level",isDocsHomePage:!1,title:"ExpLevel",description:"Incremental games often use something that can be leveled up.",source:"@site/docs/tools/exp-level.md",slug:"/tools/exp-level",permalink:"/igt-docs/docs/tools/exp-level",version:"current",sidebar:"docs",previous:{title:"Requirements",permalink:"/igt-docs/docs/tools/requirements"},next:{title:"Boosters",permalink:"/igt-docs/docs/tools/boosters"}},s=[{value:"Requirements",id:"requirements",children:[]},{value:"Usage",id:"usage",children:[]},{value:"See also",id:"see-also",children:[]}],c={rightToc:s};function p(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Incremental games often use something that can be leveled up.\nIt could be an RPG-like skill that provides bonuses based on the level. Or an item that can be leveled up five times."),Object(o.b)("p",null,"This tool allows you to easily add such functionality by providing exp needed per level!"),Object(o.b)("h2",{id:"requirements"},"Requirements"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Support exp functions as well as hardcoded values"),Object(o.b)("li",{parentName:"ul"},"Get the progress to the next level to display it")),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"// Create a skill based on a hardcoded list of exp required.\nconst maxLevel = 5;\nconst expPerLevel = [0, 10, 30, 60, 100];\nconst skill = new DiscreteExpLevel(maxLevel, expPerLevel);\n\nskill.getLevel(); // 1\nskill.gainExperience(10);\nskill.getLevel(); // 2\n\nskill.gainExperience(100000);\nskill.getLevel(); // 5\n\n// Or use a custom function instead!\nfunction levelFunction(level: number) {\n    return (level - 1) * 10;\n}\n\nconst anotherSkill = new ContinuousExpLevel(5, levelFunction);\nanotherSkill.getExpNeededForLevel(2); // 10\nanotherSkill.gainExperience(10);\nanotherSkill.getLevel() // 2\n")),Object(o.b)("h2",{id:"see-also"},"See also"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/exp-level/IgtExpLevel.ts"}),"src/ig-template/tools/exp-level/IgtExpLevel.ts")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/exp-level/DiscreteExpLevel.ts"}),"src/ig-template/tools/exp-level/DiscreteExpLevel.ts")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/exp-level/ContinuousExpLevel.ts"}),"src/ig-template/tools/exp-level/ContinuousExpLevel.ts"))))}p.isMDXComponent=!0}}]);