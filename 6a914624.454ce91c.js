(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{103:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return y}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=b(n),u=o,y=m["".concat(s,".").concat(u)]||m[u]||p[u]||a;return n?r.a.createElement(y,l(l({ref:t},c),{},{components:n})):r.a.createElement(y,l({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var c=2;c<a;c++)s[c]=n[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return b}));var o=n(2),r=n(6),a=(n(0),n(103)),s={id:"loot-tables",title:"Loot Tables"},l={unversionedId:"tools/loot-tables",id:"tools/loot-tables",isDocsHomePage:!1,title:"Loot Tables",description:"Loot Tables are very useful. You can use them for monster drop tables, opening card packs in a CCG,",source:"@site/docs/tools/loot-tables.md",slug:"/tools/loot-tables",permalink:"/igt-docs/docs/tools/loot-tables",version:"current",sidebar:"docs",previous:{title:"Boosters",permalink:"/igt-docs/docs/tools/boosters"},next:{title:"Hotkeys",permalink:"/igt-docs/docs/tools/hotkeys"}},i=[{value:"Requirements",id:"requirements",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Implementation",id:"implementation",children:[]},{value:"See also",id:"see-also",children:[]}],c={rightToc:i};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Loot Tables are very useful. You can use them for monster drop tables, opening card packs in a CCG,\n",Object(a.b)("del",{parentName:"p"},"or cash out and sell loot boxes"),". The ",Object(a.b)("inlineCode",{parentName:"p"},"LootTable")," allows you to combine different rewards.\nSo you can gain a ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/igt-docs/docs/features/key-items"}),"Key Item")," or a ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/igt-docs/docs/features/wallet"}),"Currency")," from the same table."),Object(a.b)("p",null,"In the demo application, all ",Object(a.b)("inlineCode",{parentName:"p"},"LootTable"),"s are store in a ",Object(a.b)("inlineCode",{parentName:"p"},"Feature"),".\nThis is not strictly necessary, but it's the easiest way to inject features into them and reuse tables."),Object(a.b)("h2",{id:"requirements"},"Requirements"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"View possible rewards before rolling"),Object(a.b)("li",{parentName:"ul"},"View rewards after rolling"),Object(a.b)("li",{parentName:"ul"},"Roll on other tables"),Object(a.b)("li",{parentName:"ul"},"Easily create new reward types"),Object(a.b)("li",{parentName:"ul"},"Lock drops behind ",Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"/igt-docs/docs/tools/requirements"}),"Requirements"))),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"// Create a new loot table\nconst table = new LootTable(LootTableId.Example, [\n    // Always\n    new CurrencyEntry(new IntRange(100, 200), CurrencyType.Money, wallet)\n], [\n    // One Of\n    new InventoryItemEntry(itemList[ItemId.RawFish], inventory, 1, new IntRange(2, 3)),\n    new InventoryItemEntry(itemList[ItemId.CookedFish], inventory),\n], [\n    // Any Of\n    new KeyItemEntry(keyItems.getKeyItem(KeyItemId.Item1), keyItems, 0.5),\n    new TableEntry(LootTableId.Example, lootTables, 0.05),\n    new InventoryItemEntry(itemList[ItemId.MoneyPouch], inventory, 1, new IntRange(3, 5)),\n])\n\ntable.roll() // AbstractLoot[], already applied\n")),Object(a.b)("h2",{id:"implementation"},"Implementation"),Object(a.b)("p",null,"If we need to create a custom ",Object(a.b)("inlineCode",{parentName:"p"},"Loot")," type, we need to extend the ",Object(a.b)("inlineCode",{parentName:"p"},"AbstractEntry"),", which is a part of the table.\nAnd we have to extend the ",Object(a.b)("inlineCode",{parentName:"p"},"AbstractLoot"),", which is the actual reward that can be applied."),Object(a.b)("p",null,"In this example we will implement loot that gains a ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/igt-docs/docs/features/key-items"}),"Key Item"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"export class KeyItemEntry extends AbstractLootEntry {\n    _keyItems: KeyItems;\n    item: KeyItem;\n\n    constructor(item: KeyItem, KeyItems: KeyItems, weight: number = 1, requirement: Requirement = new NoRequirement()) {\n        super(weight, new IntRange(1, 1), requirement);\n        this.item = item;\n        this._keyItems = KeyItems;\n    }\n\n    getLoot(): KeyItemLoot[] {\n        if (!this.canGet() || this._keyItems.hasKeyItem(this.item.id)) {\n            return [];\n        }\n        return [new KeyItemLoot(this.item, this._keyItems)];\n    }\n}\n")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"export class KeyItemLoot extends AbstractLoot {\n    loot: KeyItem;\n    _keyItems: KeyItems;\n\n    constructor(loot: KeyItem, keyItems: KeyItems) {\n        super(1);\n        this.loot = loot;\n        this._keyItems = keyItems;\n    }\n\n    /**\n     * Actually award the loot-tables\n     */\n    apply(): void {\n        this._keyItems.gainKeyItem(this.loot.id);\n    }\n\n    /**\n     * Override to implement comparisons. Used for simplifying the list of loot\n     */\n    equals(other: AbstractLoot): boolean {\n        return other instanceof KeyItemLoot && other.loot.id === this.loot.id;\n    }\n\n}\n")),Object(a.b)("h2",{id:"see-also"},"See also"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/loot-tables/LootTable.ts"}),"src/ig-template/tools/loot-tables/LootTable.ts")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/loot-tables/rewards/IgtLoot.ts"}),"src/ig-template/tools/loot-tables/rewards/IgtLoot.ts")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/loot-tables/entries/IgtLootEntry.ts"}),"src/ig-template/tools/loot-tables/entries/IgtLootEntry.ts")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/123ishaTest/igt-library/blob/master/src/ig-template/tools/loot-tables/entries/TableEntry.ts"}),"src/ig-template/tools/loot-tables/entries/TableEntry.ts"))))}b.isMDXComponent=!0}}]);